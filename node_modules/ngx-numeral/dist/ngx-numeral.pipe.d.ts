import { PipeTransform, InjectionToken } from "@angular/core";
import { RegisterType, RoundingFunction, NumeralJSLocale, NumeralJsFormat } from "./numeraljs";
export declare const DEFAULT_NUMERAL: InjectionToken<number>;
export declare class NumeralPipe implements PipeTransform {
    private numeral;
    constructor(value?: string | number);
    transform(value: number, format: string): string;
    readonly version: string;
    readonly isNumeral: boolean;
    locale(key?: string): string;
    register(what: RegisterType, key: string, value: NumeralJSLocale | NumeralJsFormat): NumeralJSLocale | NumeralJsFormat;
    zeroFormat(format: string): void;
    nullFormat(format: string): void;
    defaultFormat(format: string): void;
    clone(): NumeralPipe;
    format(inputString?: string, roundingFunction?: RoundingFunction): string;
    formatCurrency(inputString?: string): string;
    unformat(inputString: string): number;
    value(): number;
    valueOf(): number;
    set(value: any): this;
    add(value: any): this;
    subtract(value: any): this;
    multiply(value: any): this;
    divide(value: any): this;
    difference(value: any): number;
    validate(value: any, culture: any): boolean;
}
